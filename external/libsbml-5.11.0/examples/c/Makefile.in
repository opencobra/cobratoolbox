## @configure_input@
##
## Filename    : Makefile
## Description : Builds the example programs
## Author(s)   : SBML Team <sbml-team@caltech.edu>
## Created     : 2002-12-05
##
## <!--------------------------------------------------------------------------
## This file is part of libSBML.  Please visit http://sbml.org for more
## information about SBML, and the latest version of libSBML.
##
## Copyright (C) 2013-2014 jointly by the following organizations:
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK
##     3. University of Heidelberg, Heidelberg, Germany
##
## Copyright (C) 2009-2013 jointly by the following organizations: 
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK
##  
## Copyright (C) 2006-2008 by the California Institute of Technology,
##     Pasadena, CA, USA 
##  
## Copyright (C) 2002-2005 jointly by the following organizations: 
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. Japan Science and Technology Agency, Japan
## 
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation.  A copy of the license agreement is provided
## in the file named "LICENSE.txt" included with this software distribution
## and also available online as http://sbml.org/software/libsbml/license.html
## ------------------------------------------------------------------------ -->
##
## The original code contained here was initially developed by:
##
##     Ben Bornstein
##     SBML Team
##     Control and Dynamical Systems, MC 107-81
##     California Institute of Technology
##     Pasadena, CA, 91125, USA
##
##     http://www.sbml.org
##     mailto:sbml-team@caltech.edu
##
## Contributor(s):
##  <mhucka@caltech.edu> Created the Makefile.in version of this file.

# The values of the following variables are obtained using the libSBML
# configuration program.

SRCDIR     = ../../src
INCLUDEDIR = ../../src

top_builddir = @top_builddir@
LIBTOOL    = @LIBTOOL@
CC         = $(LIBTOOL) --mode=link @CC@
CFLAGS     = @CFLAGS@ -Wall

LIBS       = -lsbml

# If you are presently reading Makefile and not Makefile.in, the following
# lists may have empty values.  This is okay; it's merely a result of how
# the values are obtained when Makefile is generated from Makefile.in
# by the ../../configure program.

CPPFLAGS  += @EXPAT_CPPFLAGS@ @XERCES_CPPFLAGS@ @LIBXML_CPPFLAGS@
LDFLAGS   += @EXPAT_LDFLAGS@ @XERCES_LDFLAGS@ @LIBXML_LDFLAGS@
LIBS      += @EXPAT_LIBS@ @XERCES_LIBS@ @LIBXML_LIBS@

CPPFLAGS  += -I$(INCLUDEDIR)
LDFLAGS   += -L$(SRCDIR)
LIBS      += -lstdc++ -lm

# The rest of this Makefile remains static regardless of the values
# assigned to the variables above.

programs   = convertSBML evaluateMath echoSBML printMath printSBML \
             readSBML translateMath validateSBML addCVTerms \
			 addingEvidenceCodes_1 addingEvidenceCodes_2 addModelHistory \
			 appendAnnotation createExampleSBML printAnnotation \
			 printNotes printRegisteredPackages printSupported printUnits \
			 unsetAnnotation unsetNotes stripPackage

all: $(programs)

convertSBML: convertSBML.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

drawMath: drawMath.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

echoSBML: echoSBML.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS) -lm

evaluateMath: evaluateMath.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS) -lm

printMath: printMath.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS) -lm

printSBML: printSBML.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

readSBML: readSBML.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

translateMath: translateMath.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

validateSBML: validateSBML.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

addCVTerms: addCVTerms.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

addingEvidenceCodes_1: addingEvidenceCodes_1.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

addingEvidenceCodes_2: addingEvidenceCodes_2.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

addModelHistory: addModelHistory.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

stripPackage: stripPackage.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

appendAnnotation: appendAnnotation.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

createExampleSBML: createExampleSBML.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

printAnnotation: printAnnotation.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

printNotes: printNotes.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

printRegisteredPackages: printRegisteredPackages.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

printSupported: printSupported.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

printUnits: printUnits.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

unsetAnnotation: unsetAnnotation.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

unsetNotes: unsetNotes.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

translateL3Math: translateL3Math.c util.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

clean:
	/bin/rm -f *~ $(programs) $(patsubst %,%.exe,$(programs))

distclean: clean
	/bin/rm Makefile


# The following are generic 'make' targets that are not used in
# this simple examples directory.

check dist docs install install-docs uninstall \
mostlyclean maintainer-clean installcheck dvi pdf ps info html \
distcheck:

