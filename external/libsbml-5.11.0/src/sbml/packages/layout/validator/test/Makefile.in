## @configure_input@
##
## Filename    : Makefile.in
## Description : Makefile template for libsbml src/sbml/packages/layout/validator/test
## Author(s)   : SBML Team <sbml-team@caltech.edu>
## Organization: California Institute of Technology
## Created     : 2005-03-15
## 
## This file is part of libSBML.  Please visit http://sbml.org for more
## information about SBML, and the latest version of libSBML.
##
## Copyright (C) 2013-2014 jointly by the following organizations:
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK
##     3. University of Heidelberg, Heidelberg, Germany
## 
## Copyright (C) 2009-2013 jointly by the following organizations: 
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK
##  
## Copyright (C) 2006-2008 by the California Institute of Technology,
##     Pasadena, CA, USA 
##  
## Copyright (C) 2002-2005 jointly by the following organizations: 
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. Japan Science and Technology Agency, Japan
## 
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation.  A copy of the license agreement is provided
## in the file named "LICENSE.txt" included with this software distribution
## and also available online as http://sbml.org/software/libsbml/license.html
##
## The original code contained here was initially developed by:
##
##     Ben Bornstein
##     SBML Team
##     Control and Dynamical Systems, MC 107-81
##     California Institute of Technology
##     Pasadena, CA, 91125, USA
##
##     http://www.sbml.org
##     mailto:sbml-team@caltech.edu
##
## Contributor(s):
##   Michael Hucka <mhucka@caltech.edu> Wrote this Makefile.in.
##


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under `srcdir'.  Don't 
# set `subdir' to an absolute path, or some `make' actions will fail.

srcdir    = @srcdir@
thisdir   = src/sbml/packages/layout/validator/test

# Variables `headers', `sources', `libraries', `extra_CPPFLAGS',
# `extra_CXXFLAGS', `extra_LDFLAGS' and `distfiles' are used by the default
# rules in `makefile-common-actions.mk' included at the end.

test_sources =                 \
  TestFile.cpp                 \
  TestLayoutConsistencyValidator.cpp \
  TestValidator.cpp

test_headers =                 \
  TestFile.h                   \
  TestValidator.h

extra_CPPFLAGS = -I.. -I../.. -I../../../../

ifdef USE_LIBCHECK
  check_driver      = TestLayoutConsistencyValidator
  ifeq "$(findstring $(LIBCHECK_CPPFLAGS),$(extra_CPPFLAGS))" ""
    extra_CPPFLAGS  += $(LIBCHECK_CPPFLAGS)
  endif
  ifeq "$(findstring $(LIBCHECK_LDFLAGS),$(extra_LDFLAGS))" ""
    extra_LDFLAGS   += $(LIBCHECK_LDFLAGS)
  endif
  ifeq "$(findstring $(LIBCHECK_LIBS),$(extra_LIBS))" ""
    extra_LIBS      += $(LIBCHECK_LIBS)
  endif
  extra_clean       += $(check_driver)
endif

ifdef USE_EXPAT
  extra_CPPFLAGS += $(EXPAT_CPPFLAGS)
  extra_LDFLAGS  += $(EXPAT_LDFLAGS)
  extra_LIBS     += $(EXPAT_LIBS)
endif

ifdef USE_XERCES
  extra_CPPFLAGS += $(XERCES_CPPFLAGS)
  extra_LDFLAGS  += $(XERCES_LDFLAGS)
  extra_LIBS     += $(XERCES_LIBS)
endif

ifdef USE_LIBXML
  extra_CPPFLAGS += $(LIBXML_CPPFLAGS)
  extra_LDFLAGS  += $(LIBXML_LDFLAGS)
  extra_LIBS     += $(LIBXML_LIBS)
ifdef BUGGY_APPLE_LIBXML
  extra_CPPFLAGS += -DBUGGY_APPLE_LIBXML=$(BUGGY_APPLE_LIBXML)
endif
endif

extra_LDFLAGS  += ../../../../../libsbml.la

# `distfiles' determines the files and directories included in a distribution.
# `distfiles_exclude' is used to filter out specific items, so that even if
# they appear in `distfiles', they will not be copied in the distribution.


distfiles = $(test_sources) $(test_headers) \
	    Makefile.in CMakeLists.txt

subdirs = test-data

# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

# The default action is to do nothing except maybe remake the Makefile.  The
# real actions are triggered by 'make check'.

all: Makefile all-recursive


# -----------------------------------------------------------------------------
# Checking.
# -----------------------------------------------------------------------------

# Variables $(test_objfiles), $(check_driver), and the rest of the code
# for running check are abstracted out into makefile-common-actions.mk,
# which is included at the bottom of this file.  Here we just need to construct
# the appropriate list of object files to link together.  Because there are
# dependencies on other subdirectoris of the source tree, we do some rummaging
# around in .. and ../../subdirs.

tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
localobjfiles = $(filter %.lo,$(tmp))

otherdirs     = ../common ../../extension ../../util ../../sbml ../../validator
ifdef USE_COMP
  otherdirs  += ../../../comp/common ../../../comp/sbml \
		../../../comp/extension ../../../comp/util \
		../../../comp/validator
endif
ifdef USE_FBC
  otherdirs  += ../../../fbc/common ../../../fbc/sbml \
		../../../fbc/extension ../../../fbc/util \
		../../../fbc/validator
endif
ifdef USE_QUAL
  otherdirs  += ../../../qual/common ../../../qual/sbml \
		../../../qual/extension ../../../qual/util \
		../../../qual/validator
endif

otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
test_objfiles = $(localobjfiles) $(otherobjfiles)


ifdef USE_LIBCHECK
  check: all run-checks
else
  check:; @echo Please first rerun 'configure' with the --with-check flag; exit 1
endif


# -----------------------------------------------------------------------------
# Tags.
# -----------------------------------------------------------------------------

tags: etags ctags


# -----------------------------------------------------------------------------
# Installation
# -----------------------------------------------------------------------------

# This library doesn't actually get installed.  The main libsbml library
# (in ../src) slurps in the contents when it's built.

install: all install-headers

installcheck: all installcheck-headers

uninstall: uninstall-recursive uninstall-headers


# -----------------------------------------------------------------------------
# Cleaning.
# -----------------------------------------------------------------------------

clean: clean-normal clean-recursive

distclean: distclean-normal distclean-recursive

mostlyclean: mostlyclean-normal mostlyclean-recursive

maintainer-clean: maintainer-clean-normal maintainer-clean-recursive


# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

dist: all dist-normal dist-recursive

distcheck: all distcheck-normal distcheck-recursive


# -----------------------------------------------------------------------------
# Miscellaneous
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------

