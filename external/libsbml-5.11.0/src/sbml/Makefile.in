## @configure_input@
##
## Filename    : Makefile.in
## Description : Makefile template for libsbml src/sbml directory
## Author(s)   : Michael Hucka <mhucka@caltech.edu>
## Organization: California Institute of Technology
## Created     : 2005-03-15
## 
## <!--------------------------------------------------------------------------
## This file is part of libSBML.  Please visit http://sbml.org for more
## information about SBML, and the latest version of libSBML.
##
## Copyright (C) 2013-2014 jointly by the following organizations:
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK
##     3. University of Heidelberg, Heidelberg, Germany
##
## Copyright (C) 2009-2013 jointly by the following organizations: 
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK
##  
## Copyright (C) 2006-2008 by the California Institute of Technology,
##     Pasadena, CA, USA 
##  
## Copyright (C) 2002-2005 jointly by the following organizations: 
##     1. California Institute of Technology, Pasadena, CA, USA
##     2. Japan Science and Technology Agency, Japan
## 
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation.  A copy of the license agreement is provided
## in the file named "LICENSE.txt" included with this software distribution
## and also available online as http://sbml.org/software/libsbml/license.html
## ------------------------------------------------------------------------ -->


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under `srcdir'.  Don't 
# set `subdir' to an absolute path, or some `make' actions will fail.

srcdir  = @srcdir@
thisdir = src/sbml

# The `headers' list is not actually used for analyzing source dependencies
# (a separate mechanism is used for that), but for other things such as what
# to distribute and install.

headers =                    \
  AlgebraicRule.h            \
  AssignmentRule.h           \
  Compartment.h              \
  CompartmentType.h          \
  Constraint.h               \
  Delay.h                    \
  Event.h                    \
  EventAssignment.h          \
  ExpectedAttributes.h       \
  FunctionDefinition.h       \
  InitialAssignment.h        \
  KineticLaw.h               \
  ListOf.h                   \
  LocalParameter.h           \
  Model.h                    \
  ModifierSpeciesReference.h \
  Parameter.h                \
  Priority.h                 \
  RateRule.h                 \
  Reaction.h                 \
  Rule.h                     \
  SBMLConstructorException.h \
  SBMLDocument.h             \
  SBMLError.h                \
  SBMLErrorLog.h             \
  SBMLErrorTable.h           \
  SBMLNamespaces.h           \
  SBMLReader.h               \
  SBMLTransforms.h           \
  SBMLTypeCodes.h            \
  SBMLTypes.h                \
  SBMLVisitor.h              \
  SBMLWriter.h               \
  SBO.h		             \
  SimpleSpeciesReference.h   \
  SBase.h                    \
  Species.h                  \
  SpeciesReference.h         \
  SpeciesType.h              \
  StoichiometryMath.h        \
  SyntaxChecker.h            \
  Trigger.h                  \
  Unit.h                     \
  UnitDefinition.h           \
  UnitKind.h

sources =                      \
  AlgebraicRule.cpp            \
  AssignmentRule.cpp           \
  Compartment.cpp              \
  CompartmentType.cpp          \
  Constraint.cpp               \
  Delay.cpp                    \
  Event.cpp                    \
  EventAssignment.cpp          \
  ExpectedAttributes.cpp       \
  FunctionDefinition.cpp       \
  InitialAssignment.cpp        \
  KineticLaw.cpp               \
  ListOf.cpp                   \
  LocalParameter.cpp           \
  Model.cpp                    \
  ModifierSpeciesReference.cpp \
  Parameter.cpp                \
  Priority.cpp                 \
  RateRule.cpp                 \
  Reaction.cpp                 \
  Rule.cpp                     \
  SBMLConvert.cpp              \
  SBMLConstructorException.cpp \
  SBMLDocument.cpp             \
  SBMLError.cpp                \
  SBMLErrorLog.cpp             \
  SBMLNamespaces.cpp           \
  SBMLReader.cpp               \
  SBMLTransforms.cpp           \
  SBMLTypeCodes.cpp            \
  SBMLVisitor.cpp              \
  SBMLWriter.cpp               \
  SBO.cpp                      \
  SimpleSpeciesReference.cpp   \
  SBase.cpp                    \
  Species.cpp                  \
  SpeciesReference.cpp         \
  SpeciesType.cpp              \
  StoichiometryMath.cpp        \
  SyntaxChecker.cpp            \
  Trigger.cpp                  \
  Unit.cpp                     \
  UnitDefinition.cpp           \
  UnitKind.c


# Variables `subdirs', `headers', `sources', `libraries', `extra_CPPFLAGS',
# `extra_CXXFLAGS', `extra_LDFLAGS' and `distfiles' are used by the default
# rules in `makefile-common-actions.mk' included at the end.

subdirs = common util compress annotation math math-legacy units xml validator extension packages conversion

extra_CPPFLAGS = -DPACKAGE_VERSION=\"$(PACKAGE_VERSION)\"

ifdef USE_EXPAT
  extra_CPPFLAGS += $(EXPAT_CPPFLAGS) -DUSE_EXPAT
  extra_LDFLAGS  += $(EXPAT_LDFLAGS)
  extra_LIBS     += $(EXPAT_LIBS)
endif

ifdef USE_XERCES
  extra_CPPFLAGS += $(XERCES_CPPFLAGS) -DUSE_XERCES
  extra_LDFLAGS  += $(XERCES_LDFLAGS)
  extra_LIBS     += $(XERCES_LIBS)
endif

ifdef USE_LIBXML
  extra_CPPFLAGS += $(LIBXML_CPPFLAGS) -DUSE_LIBXML
  extra_LDFLAGS  += $(LIBXML_LDFLAGS)
  extra_LIBS     += $(LIBXML_LIBS)
endif


ifdef USE_ZLIB
 extra_CPPFLAGS += -DUSE_ZLIB
endif

ifdef USE_BZ2
 extra_CPPFLAGS += -DUSE_BZ2
endif

ifneq "$(MAKECMDGOALS)" "all"
  subdirs += test
endif

# The libsbml build is a little more complicated than it used to be.  The
# library is assembled after compiling the object files in this directory.
# However, to link the library, we have to assemble it out of pieces coming
# from sibling directories.  And we put the results in ../.  The following
# redefines the defaults from makefile-common-actions.mk to accomplish this.

objects   = $(call make_objects_list,$(sources))
otherdirs = common util xml math validator validator/constraints units \
	    annotation compress extension conversion

ifdef USE_COMP
  otherdirs +=  packages/comp/extension packages/comp/sbml  \
                packages/comp/common packages/comp/util \
                packages/comp/validator packages/comp/validator/constraints
endif
ifdef USE_FBC
  otherdirs +=  packages/fbc/extension packages/fbc/sbml  \
                packages/fbc/common packages/fbc/util \
                packages/fbc/validator packages/fbc/validator/constraints
endif
ifdef USE_LAYOUT
  otherdirs +=  packages/layout/extension packages/layout/sbml  \
                packages/layout/common    packages/layout/util  \
                packages/layout/validator packages/layout/validator/constraints
endif
ifdef USE_QUAL
  otherdirs +=  packages/qual/extension packages/qual/sbml  \
                packages/qual/common \
                packages/qual/validator packages/qual/validator/constraints
endif

objfiles  = $(objects) $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))


# The libraries are actually placed in the parent directory.

libraries = ../$(PACKAGE).la

# `distfiles' determines the files and directories included in a distribution.
# `distfiles_exclude' is used to filter out specific items, so that even if
# they appear in `distfiles', they will not be copied in the distribution.

distfiles = $(sources) $(headers) Makefile.in CMakeLists.txt


# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

# The default action is to remake everything.  Those rules which are not
# defined below are defined in makefile-common-actions.mk.

all: Makefile all-recursive all-this-dir

all-this-dir: ;
ifneq "$(MAKEFLAGS)" ""
	$(MAKE) -$(MAKEFLAGS) default
else
	$(MAKE) default
endif


# -----------------------------------------------------------------------------
# Checking.
# -----------------------------------------------------------------------------

check: all check-recursive


# -----------------------------------------------------------------------------
# Tags.
# -----------------------------------------------------------------------------

tags: etags ctags


# -----------------------------------------------------------------------------
# Installation
# -----------------------------------------------------------------------------

install: all install-libraries install-headers

installcheck: all installcheck-libraries installcheck-headers

uninstall: uninstall-headers uninstall-libtoolized-libraries uninstall-libraries uninstall-recursive

# uninstall library files listed in the libsbml.la file.
uninstall-libtoolized-libraries:
	for i in `grep library_names $(DESTDIR)$(LIBDIR)/libsbml.la | \
	awk -F"'" '{print $$2}'`; do \
	  f=$(DESTDIR)$(LIBDIR)/$$i; \
	  if test -f $$f -o -h $$f; then echo rm -f $$f ; rm -f $$f; fi; \
	done ;\
	for i in `grep old_library $(DESTDIR)$(LIBDIR)/libsbml.la | \
	awk -F"'" '{print $$2}'`; do \
	  f=$(DESTDIR)$(LIBDIR)/$$i; \
	  if test -f $$f ; then echo rm -f $$f ; rm -f $$f; fi; \
	done ;\


# -----------------------------------------------------------------------------
# Cleaning.
# -----------------------------------------------------------------------------

clean: clean-normal clean-recursive

distclean: distclean-normal distclean-recursive

mostlyclean: mostlyclean-normal mostlyclean-recursive

maintainer-clean: maintainer-clean-normal maintainer-clean-recursive


# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

dist: dist-normal dist-recursive

distcheck: distcheck-normal distcheck-recursive


# -----------------------------------------------------------------------------
# Miscellaneous
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------

