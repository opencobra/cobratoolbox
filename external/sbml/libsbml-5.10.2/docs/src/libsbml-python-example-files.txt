/** @page libsbml-python-example-files Additional complete example programs

@tableofcontents

The libSBML distribution comes with the following selection of
complete example programs in the top-level file directory 
named <code>examples/python</code>. 

@section simple-programs Simple programs

@li @ref createSimpleModel.py "createSimpleModel.py":
Creates and prints a simple SBML Level&nbsp;3 model.

@li @ref echoSBML.py "echoSBML.py":
Echos (and in the process, pretty prints) an SBML model.

@li @ref readSBML.py "readSBML.py":
A simple command-line program that reads an SBML file and prints
some statistics about it.

@li @ref printSBML.py "printSBML.py":
Prints information about the top-level model in the given SBML file.

@li @ref printRegisteredPackages.py "printRegisteredPackages.py":
Prints the SBML Level 3 packages registered/installed in this copy of libSBML.

@li @ref printSupported.py "printSupported.py":
Prints the supported SBML Levels and Versions for this copy of libSBML.


@section advanced-programs More advanced programs

@li @ref addCVTerms.py "addCVTerms.py":
Adds controlled vocabulary terms to a species in a model.

@li @ref addCustomValidator.py "addCustomValidator.py":
Example of creating a custom validator to be called during validation.

@li @ref addModelHistory.py "addModelHistory.py":
Adds a model history to a model.

@li @ref addingEvidenceCodes_1.py "addingEvidenceCodes_1.py":
Adds controlled vocabulary terms to a reaction in a model.

@li @ref addingEvidenceCodes_2.py "addingEvidenceCodes_2.py":
Adds evidence codes to a species in a model.

@li @ref appendAnnotation.py "appendAnnotation.py":
Adds annotation strings to a model and a species.

@li @ref callExternalValidator.py "callExternalValidator.py":
Example that shows how to call an external program for validation.

@li @ref convertSBML.py "convertSBML.py":
Example demonstrating how to convert SBML documents between SBML Levels.

@li @ref createExampleSBML.py "createExampleSBML.py":
Lengthy example of creating SBML models presented in the SBML specification.

@li @ref getAllElementsWithNotes.py "getAllElementsWithNotes.py":
Demonstrates how to use the element filter class to search the model
for elements with specific attributes .

@li @ref printAnnotation.py "printAnnotation.py":
Prints the annotation strings for each element in a given model.

@li @ref printMath.py "printMath.py":
Prints the rule, reaction, and event formulas in a given SBML document.

@li @ref printNotes.py "printNotes.py":
Prints the notes strings for each element in a given model.

@li @ref printRegisteredPackages.py "printRegisteredPackages.py":
A command-line program that prints the package plug-ins that are
registered with this copy of libSBML.

@li @ref printUnits.py "printUnits.py":
A command-line program that prints information about the units 
of measurement used in a given SBML file.

@li @ref promoteParameters.py "promoteParameters.py":
Promote all local parameters in the model to global parameters.

@li @ref setIdFromNames.py "setIdFromNames.py":
Program that renames all SIds that also have names specified. The new
identifiers will be derived from the name, with all invalid characters removed.

@li @ref stripPackage.py "stripPackage.py":
Strips the given SBML Level 3 package from the given SBML file.

@li @ref translateMath.py "translateMath.py":
Translates infix formulas into MathML and vice-versa.

@li @ref unsetAnnotation.py "unsetAnnotation.py":
Unsets the annotation for each element in the given SBML file.

@li @ref unsetNotes.py "unsetNotes.py":
Unsets the notes for each element in the given SBML file.

@li @ref validateSBML.py "validateSBML.py":
Validates one or more SBML files.


@section package-programs Programs using SBML Level 3 packages

The following examples use specific libSBML plug-ins to support SBML
Level&nbsp;3 packages.  The use of these packages requires your copy
of libSBML to have been configured to enable the appropriate plug-in.  The
default installation of libSBML comes with the packages below already
enabled, but beware that if you built libSBML from source code and
disabled one or more of these packages, then their features will not
be available.


@subsection package-fbc-examples Package: Flux Balance Constraints

The <a href="group__fbc.html">Flux Balance Constraints</a> package has
the nickname &ldquo;fbc&rdquo;.  The libSBML classes that implement
this package are marked with the symbol @htmlinclude
pkg-marker-fbc.html@~ in the libSBML documentation.

@li @ref fbc_example1.py "fbc_example1.py":
Simple example of writing a model that uses the SBML Level&nbsp;3 Flux
Balance Constraints package.

@li @ref convertCobraToFbc.py "convertCobraToFbc.py":
Example of converting a COBRA-style SBML Level 2 model to SBML
Level&nbsp;3 using the Flux Balance Constraints package.

@li @ref convertFbcToCobra.py "convertFbcToCobra.py": 
Example of converting an SBML Level&nbsp;3 model using the Flux 
Balance Constraints package to a COBRA-style SBML Level 2 model.


@subsection package-comp-examples Package: Hierarchical Model Composition

The <a href="group__comp.html">Hierarchical Model Composition</a>
package has the nickname &ldquo;comp&rdquo;.  The libSBML classes that
implement this package are marked with the symbol @htmlinclude
pkg-marker-comp.html@~ in the libSBML documentation.

@li @ref flattenModel.py "flattenModel.py": %Model flattening
example.


@subsection package-layout-examples Package: Layout

The <a href="group__layout.html">Layout package</a> has the nickname
&ldquo;layout&rdquo;. The libSBML classes that implement this package
are marked with the symbol @htmlinclude pkg-marker-layout.html@~ in the
libSBML documentation.

@li @ref convertLayout.py "convertLayout.py":
Converts SBML Layout and Render data from SBML Level&nbsp;2 to
Level&nbsp;3 and vice versa.

@li @ref example1.py "example1.py":
An example layout.

@li @ref example1-L3.py "example1-L3.py":
A version of <code>example1.py</code> for SBML Level&nbsp;3.


@subsection package-qual-examples Package: Qualitative Models

The <a href="group__qual.html">Qualitative Models package</a> has the
nickname &ldquo;layout&rdquo;. The libSBML classes that implement this
package are marked with the symbol @htmlinclude
pkg-marker-qual.html@~ in the libSBML documentation.

@li @ref qual_example1.py "qual_example1.py":
An example of creating a model using SBML Level 3 Qualitative Models.


<br>


<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
Every file referenced above with an @ref must be referenced using
@example below.
~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

@example addCVTerms.py Adds controlled vocabulary terms to a species
in a model.

@example addCustomValidator.py Example of creating a custom validator
to be called during validation.

@example addModelHistory.py Adds a model history to a model.

@example addingEvidenceCodes_1.py Adds controlled vocabulary terms to
a reaction in a model.

@example addingEvidenceCodes_2.py Adds evidence codes to a species in
a model.

@example appendAnnotation.py Adds annotation strings to a model and a
species.

@example callExternalValidator.py Example that shows how to call an
external program for validation.

@example convertSBML.py Example demonstrating how to convert SBML
documents between SBML Levels.

@example createExampleSBML.py Lengthy example of creating SBML models
presented in the SBML specification.

@example echoSBML.py Echos (and in the process, pretty prints) an
SBML model.

@example getAllElementsWithNotes.py Demonstrates how to use the
element filter class to search the model for elements with specific
attributes .

@example printAnnotation.py Prints the annotation strings for each
element in a given model.

@example printMath.py Prints the rule, reaction, and event formulas
in a given SBML document.

@example printNotes.py Prints the notes strings for each element in a
given model.

@example printRegisteredPackages.py Prints the SBML Level 3 packages
registered/installed in this copy of libSBML.

@example printSBML.py Prints information about the top-level model in
the given SBML file.

@example printSupported.py Prints the supported SBML Levels and
Versions for this copy of libSBML.

@example printUnits.py A command-line program that prints information
about the units of measurement used in a given SBML file.

@example readSBML.py A simple command-line program that reads an SBML
file and prints some statistics about it.

@example setIdFromNames.py Program that renames all SIds that also
have names specified. The new identifiers will be derived from the
name, with all invalid characters removed.

@example stripPackage.py Strips the given SBML Level 3 package from
the given SBML file.

@example translateMath.py Translates infix formulas into MathML and
vice-versa.

@example unsetAnnotation.py Unsets the annotation for each element in
the given SBML file.

@example unsetNotes.py Unsets the notes for each element in the given
SBML file.

@example validateSBML.py Validates one or more SBML files.

@example flattenModel.py Model flattening example.

@example fbc_example1.py
Simple example of writing a model that uses the SBML Level&nbsp;3 Flux
Balance Constraints package.

@example convertCobraToFbc.py
Example of converting a COBRA-style SBML Level 2 model to SBML
Level&nbsp;3 using the Flux Balance Constraints package.

@example convertFbcToCobra.py
Example of converting an SBML Level&nbsp;3 model using the Flux
Balance Constraints package to a COBRA-style SBML Level 2 model.

@example promoteParameters.py
Promote all local parameters in the model to global parameters.

@example convertLayout.py
Converts SBML Layout and Render datra from SBML Level&nbsp;2 to
Level&nbsp;3 and vice versa.

@example example1.py
An example layout.

@example example1-L3.py
A version of <code>example1.py</code> for SBML Level&nbsp;3.

@example qual_example1.py
An example of creating a model using SBML Level 3 Qualitative Models.

@example createSimpleModel.py
An example of creating a simple SBML Level 3 model.

*/
<!-- The following is for [X]Emacs users.  Please leave in place. -->
<!-- Local Variables: -->
<!-- fill-column: 70 -->
<!-- End: -->
